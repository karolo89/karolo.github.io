{
  "hash": "947f40753711862fbe6a25ffadf41750",
  "result": {
    "markdown": "---\ntitle: \"TidyTuesday\"\nauthor: \"Karol Orozco\"\ndate: \"2023/02/05\"\nimage: \"tt_logo.png\"\n---\n\n\n# Get the Data\n\n\n\n\n\n# Cleaning Script\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fs)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\n\n# Source for datasets. The datasets were downloaded and extracted to an\n# \"archive\" folder within the working directory for processing, but they are not\n# included in this repo.\n\"https://www.kaggle.com/datasets/evangower/big-tech-stock-prices\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"https://www.kaggle.com/datasets/evangower/big-tech-stock-prices\"\n```\n:::\n\n```{.r .cell-code}\n# This is mostly equivalent to fs::dir_map, but we need to keep the info from\n# the filename.\n\nbig_tech_stock_prices_list <- purrr::map(\n  fs::dir_ls(\n    here::here(\"data\", \"2023\", \"2023-02-07\", \"archive\"),\n    glob = \"*.csv\"\n  ),\n  \\(path) {\n    ticker <- fs::path_file(path) |> fs::path_ext_remove()\n    readr::read_csv(\n      file = path,\n      col_types = cols(\n        Date = col_date(format = \"\"),\n        Open = col_double(),\n        High = col_double(),\n        Low = col_double(),\n        Close = col_double(),\n        `Adj Close` = col_double(),\n        Volume = col_double()\n      )\n    ) |> \n      dplyr::mutate(stock_symbol = ticker, .before = 1)\n  }\n)\n\nbig_tech_stock_prices <- purrr::list_rbind(big_tech_stock_prices_list) |> \n  janitor::clean_names()\ndplyr::glimpse(big_tech_stock_prices)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 45,088\nColumns: 8\n$ stock_symbol <chr> \"AAPL\", \"AAPL\", \"AAPL\", \"AAPL\", \"AAPL\", \"AAPL\", \"AAPL\", \"…\n$ date         <date> 2010-01-04, 2010-01-05, 2010-01-06, 2010-01-07, 2010-01-…\n$ open         <dbl> 7.622500, 7.664286, 7.656429, 7.562500, 7.510714, 7.60000…\n$ high         <dbl> 7.660714, 7.699643, 7.686786, 7.571429, 7.571429, 7.60714…\n$ low          <dbl> 7.585000, 7.616071, 7.526786, 7.466071, 7.466429, 7.44464…\n$ close        <dbl> 7.643214, 7.656429, 7.534643, 7.520714, 7.570714, 7.50392…\n$ adj_close    <dbl> 6.515213, 6.526476, 6.422664, 6.410790, 6.453412, 6.39648…\n$ volume       <dbl> 493729600, 601904800, 552160000, 477131200, 447610800, 46…\n```\n:::\n\n```{.r .cell-code}\nreadr::write_csv(\n  big_tech_stock_prices,\n  here::here(\n    \"data\", \"2023\", \"2023-02-07\",\n    \"big_tech_stock_prices.csv\"\n  )\n)\n\nbig_tech_stock_prices |> \n  dplyr::count(stock_symbol, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 2\n   stock_symbol     n\n   <chr>        <int>\n 1 AAPL          3271\n 2 ADBE          3271\n 3 AMZN          3271\n 4 CRM           3271\n 5 CSCO          3271\n 6 GOOGL         3271\n 7 IBM           3271\n 8 INTC          3271\n 9 MSFT          3271\n10 NFLX          3271\n11 NVDA          3271\n12 ORCL          3271\n13 TSLA          3148\n14 META          2688\n```\n:::\n\n```{.r .cell-code}\n# Make a lookup for the symbols.\ntibble::tibble(\n  stock_symbol = c(\n    \"AAPL\",\n    \"ADBE\",\n    \"AMZN\",\n    \"CRM\",\n    \"CSCO\",\n    \"GOOGL\",\n    \"IBM\",\n    \"INTC\",\n    \"META\",\n    \"MSFT\",\n    \"NFLX\",\n    \"NVDA\",\n    \"ORCL\",\n    \"TSLA\"\n  ),\n  company = c(\n    \"Apple Inc.\",\n    \"Adobe Inc.\",\n    \"Amazon.com, Inc.\",\n    \"Salesforce, Inc.\",\n    \"Cisco Systems, Inc.\",\n    \"Alphabet Inc.\",\n    \"International Business Machines Corporation\",\n    \"Intel Corporation\",\n    \"Meta Platforms, Inc.\",\n    \"Microsoft Corporation\",\n    \"Netflix, Inc.\",\n    \"NVIDIA Corporation\",\n    \"Oracle Corporation\",\n    \"Tesla, Inc.\"\n  )\n) |> \n  readr::write_csv(\n    here::here(\n      \"data\", \"2023\", \"2023-02-07\",\n      \"big_tech_companies.csv\"\n    )\n  )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}